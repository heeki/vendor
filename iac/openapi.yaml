openapi: 3.0.1
info:
  title: idl-vendor-api
  description: IDL Vendor API
  version: 0.1.0

# components:
#   securitySchemes:
#     api-key:
#       type: "apiKey"
#       name: "x-api-key"
#       in: "header"
#     api-authorizer:
#       type: apiKey
#       name: Authorization
#       in: header
#       x-amazon-apigateway-authtype: custom
#       x-amazon-apigateway-authorizer:
#         authorizerUri:
#           Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${pApiAuthorizer}/invocations'
#         authorizerPayloadFormatVersion:
#           Fn::Sub: '${payloadVersion}'
#         authorizerResultTtlInSeconds: 10
#         enableSimpleResponses:
#           Fn::Sub: '${enableSimple}'
#         identitySource: $request.header.Authorization
#         type: request

paths:
  /vendor:
    get:
      summary: vendor
      description: returns the list of vendors
      responses:
        200:
          description: ok
      # security:
      # - api-key: []
      # - api-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        payloadFormatVersion:
          Fn::Sub: '${pPayloadVersion}'
        type: aws_proxy
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FnVendor.Arn}/invocations'
    post:
      summary: vendor
      description: populates dynamodb with vendor data
      responses:
        200:
          description: ok
      security:
      - api-key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        payloadFormatVersion:
          Fn::Sub: '${pPayloadVersion}'
        type: aws_proxy
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FnVendor.Arn}/invocations'
